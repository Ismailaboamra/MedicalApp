define(['angularAMD'], function (angularAMD) {
  'use strict';

  angularAMD.constant('GlobalRegexes', {
    IsraelPhones:
      /^05[0|2|3|4|5|6|8|9]([0-9]{7})$|^0[2|3|4|8|9]([0-9]{7})$|^07[2|3|4|6|7|9]([0-9]{7})$/,
    Email:
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
    ID: (function () {
      var regexp = /[^0-9]/;
      return {
        test: function (value) {
          if (value.length > 9 || value.length < 5) return false;

          var sum = 0;
          var i = 0;
          var x = 0;

          for (i = 0; i < 8; i++) {
            x = ((i % 2) + 1) * value.charAt(i);
            if (x > 9) {
              x = x.toString();
              x = parseInt(x.charAt(0)) + parseInt(x.charAt(1));
            }
            sum += x;
          }
          return (sum + parseInt(value.charAt(8))) % 10 == 0 &&
            value != '000000000'
            ? true
            : false;
        },
      };
    })(),
    MinimumNumber: (function () {
      return {
        test: function (value) {
          return parseInt(value) >= 1;
        },
      };
    })(),
    IDFPrivateNumber: /^[0-9]{5,7}$/ /* (function () {
            return {
                test: function (value) {
                    var number = parseInt(value,10);

                    return (number >= 10000 && number <= 9999999);
                }
            }
        })() */,
    Byte: (function () {
      return {
        test: function (value) {
          var number = Number(value, 10);

          return number >= 0 && number <= 255;
        },
      };
    })(),
    ShortInt: (function () {
      return {
        test: function (value) {
          var number = Number(value);

          return number >= 0 && number <= 32766;
        },
      };
    })(),
    OnlyHebrew: /[\u0590-\u05FF]/,
    OnlyPositiveNumber: /^\d*[1-9]\d*$/,
    PhoneNumber_Mask: '99-9999999',
    PhoneNumber_Placeholder: 'XX-XXXXXXX',
    RangeRegex: function (min, max) {
      return {
        test: function (value) {
          var number = Number(value);
          return number >= min && number <= max;
        },
      };
    },
    AlphaNumericWithRange: /^[0-9a-z\u0590-\u05FF]{0,3}$/,
    Nvarchar3: /^.{0,3}$/,
    Nvarchar4: /^.{0,4}$/,
    Nvarchar20: /^.{0,20}$/,
    Nvarchar50Hebrew: /^[- '\u0590-\u05FF]{0,50}$/,
    Nvarchar100: /^.{0,100}$/,
    OnlyNumbersAndEnglishLettets: /^[0-9a-zA-Z]{9}$/,
    OnlyNumbers: /^[0-9]+$/,
    MobileRegex: /^05[0-9]([0-9]{7})$/,
    //        faxRegex: /^0[0-9]([0-9]{7})$/
  });
});
